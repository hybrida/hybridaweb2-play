# Routes
# This file defines all application routes (Higher priority routes first)

# Strips traling slashes from urls
GET             /*path/                                   application.Application.untrail(path: String)

# Standard layout accessible pages
GET             /                                         application.Application.index()
GET             /forside                                  application.Application.forside()
GET             /insertqt                                 test.TestDatabase.index()

# STATIC INFO PAGES
GET             /arrkom                                   staticpages.About.arrkom()
GET             /bedrift                                  staticpages.Bedrift.index()
GET             /bedrift/bedriftspresentasjon             staticpages.Bedrift.bedriftspresentasjoner()
GET             /bedkom                                   staticpages.About.bedkom()
GET             /griffensorden                            griffensorden.GriffensOrden.index()
GET             /griffensorden/riddere                    griffensorden.GriffensOrden.riddere()
GET             /griffensorden/nominasjon                 griffensorden.GriffensOrden.nomination()
GET             /info                                     staticpages.About.index()
GET             /i&iktringen                              staticpages.Ringen.index()
GET             /i&iktringen/om                           staticpages.Ringen.about()
GET             /jentekom                                 staticpages.About.jentekom()
GET             /nystudent                                staticpages.About.newStudent()
GET             /redaksjonen                              staticpages.About.redaksjonen()
GET             /statutter                                staticpages.Statutter.index()
GET             /strikk                                   strikk.HybridaStrikk.index()
GET             /styret                                   staticpages.About.styret()
GET             /tillitsvalgte                            staticpages.Tillitsvalgte.index()
GET             /vevkom                                   staticpages.About.vevkom()

# MODULES

# # Admin
GET             /admin                                    admintools.Admin.index()
POST            /admin/login                              admintools.Admin.login()
POST            /admin/rediger                            admintools.Admin.editUser(uid)
POST            /admin/logout                             admintools.Admin.logout()
GET             /admin/logout                             admintools.Admin.logout()
GET             /admin/users                              admintools.Admin.allUsers()
POST            /admin/newuser                            admintools.Admin.newUser()
GET             /admin/bulkusers                          admintools.Admin.bulkUsersForm()
POST            /admin/bulkusers                          admintools.Admin.bulkUsers()
GET             /admin/api/bulkaddsingle                  admintools.Admin.bulkAddSingle()

# # Article and events
GET             /artikkel/ny                              article.ArticleIn.index()
POST            /artikkel/ny                              article.ArticleIn.save()
GET             /artikkel/:id                             article.Article.viewArticle(id)
GET             /artikkel/:id/endre                       article.Article.editArticle(id)
#FIXME: Tillater vi stor bokstav i url-er?
POST            /artikkel/:id/lagreEndring                article.ArticleIn.saveEdit(id)

GET             /event/:id                                article.Event.viewEvent(id)
GET             /event/:id/endre                          article.Event.editEvent(id)
#FIXME: Tillater vi stor bokstav i url-er?
POST            /event/:id/lagreEndring                   article.Event.saveEdit(id)
# # Bruker current login cookie, og en eventId i POST
POST            /event/meldpaa                            article.Event.updateUser()
POST            /event/meldav                             article.Event.removeUser()

POST            /comment/:articleID                       article.Article.comment(articleID)
POST            /comment/delete/:commentID                article.Article.deleteComment(commentID)

# # Bedkom-database
GET             /bedkomdatabase                           bedkomdatabase.Bedkomdatabase.index()

POST            /bedkomdatabase/bedrift                   bedkomdatabase.Bedkomdatabase.saveBedrift()
POST            /bedkomdatabase/bedrift/ud/:id            bedkomdatabase.Bedkomdatabase.updateBedrift(id)
POST            /bedkomdatabase/bedrift/slett/:id         bedkomdatabase.Bedkomdatabase.deleteBedrift(id)

POST            /bedkomdatabase/kontakt/:id               bedkomdatabase.Bedkomdatabase.saveKontaktPerson(id)
POST            /bedkomdatabase/kontakt/slett/:id         bedkomdatabase.Bedkomdatabase.deleteKontaktPerson(id)
POST            /bedkomdatabase/kontakt/ud/:id            bedkomdatabase.Bedkomdatabase.updateKontaktPerson(id)

POST            /bedkomdatabase/notat/:id                 bedkomdatabase.Bedkomdatabase.saveNote(id)
POST            /bedkomdatabase/notat/ud/:id              bedkomdatabase.Bedkomdatabase.updateNote(id)
POST            /bedkomdatabase/notat/slett/:id           bedkomdatabase.Bedkomdatabase.deleteNote(id)

# # Bedkom Blocking
GET             /bedkomblokkering                         bedpressblock.BedPresBlock.index()
POST            /bedkomblokkering                         bedpressblock.BedPresBlock.pickUsers()
POST            /bedkomblokkering/blokker                 bedpressblock.BedPresBlock.blockUser()

# # Calendar
GET             /kalender                                 calendar.Calendar.display(gcal: Boolean ?= false)
GET             /api/kalender/hent                        calendar.Calendar.fetch(start: String, end: String)
POST            /api/kalender/endre                       calendar.Calendar.change()

# # Gallery
GET             /galleri                                  gallery.Gallery.display()
POST            /api/submitImage                          gallery.Gallery.uploadGalleryImage()
GET             /api/clickScoreImage                      gallery.Gallery.giveImageClickScore(imageId: Long)

# # Login
GET             /login                                    sso.SSOLogin.login(returnarg: String)
GET             /logout                                   sso.SSOLogin.logout()
GET             /verifylogin                              sso.SSOLogin.verifylogin()
GET             /kontaktforbruker                         contactforuser.ContactForUser.index()

# # Profile
GET             /profil/:username                         profile.Profile.index(username)
GET             /profil/:username/rediger                 profile.Profile.edit(username)
POST            /profil/:username/rediger                 profile.Profile.update(username)

# # Quiz
GET             /quiz                                     quiz.QuizController.index()
GET             /api/quiz/teams                           quiz.QuizController.quizTeams()
PUT             /api/quiz/team                            quiz.QuizController.putTeam()
DELETE          /api/quiz/team/:id                        quiz.QuizController.deleteTeamById(id: Long)
GET             /api/quiz/seasons                         quiz.QuizController.quizSeasons()
PUT             /api/quiz/season                          quiz.QuizController.putSeason()
DELETE          /api/quiz/season/:id                      quiz.QuizController.deleteSeasonById(id: Long)

# # RFID
GET             /rfid                                     rfid.RFIDReader.index()
GET             /rfid/:status/:number                     rfid.RFIDReader.indexContinue(status, number, eventId)
POST            /rfid                                     rfid.RFIDReader.read()

# # Search
GET             /search                                   renders.Renders.search()

# # Timeline
GET             /tidslinje                               timeline.Timeline.index()

# # Update
GET             /update                                   update.Update.index()
GET             /update/utgaver                           update.Update.utgaver()
GET             /update/redaksjon                         update.Update.redaksjon()

# # Voting
GET             /avstemning/resultater                    ballot.VoteController.getResults()
GET             /avstemning                               ballot.VoteController.index()
POST            /avstemning                               ballot.VoteController.attemptVote()
GET             /avstemning/oversikt                      ballot.VoteController.overview()
POST            /avstemning/oversikt                      ballot.VoteController.newBallot()

# API
# # Backup database
GET             /api/backup                               backup.BackupDatabase.index()

# # Upload files
POST            /api/upload                               controllers.Upload.ajaxUpload()
POST            /api/upload/:uploadFolder                 controllers.Upload.ajaxUploadTo(uploadFolder)

# TEST
# # Chat
GET             /chat                                     chat.Chat.connectClient()
GET             /chatserver                               chat.Chat.socket()

# EXAMPLES
# # Ebean
GET             /examples/ebean                           examples.controllers.ExampleEbean.index()
POST            /examples/ebean                           examples.controllers.ExampleEbean.add()
POST            /examples/ebean/clear                     examples.controllers.ExampleEbean.clear()
# # ImageUpload
GET             /examples/imageupload                     examples.controllers.ExampleImageUpload.index()
POST            /examples/imageupload                     examples.controllers.ExampleImageUpload.upload()
# # Cookies
GET             /examples/cookies                         examples.controllers.ExampleCookies.index()
POST            /examples/cookies/clear                   examples.controllers.ExampleCookies.clearAllCookies()
GET             /examples/cookies/clear                   examples.controllers.ExampleCookies.clearAllCookies()
# # Database
GET             /examples/database                        examples.controllers.ExampleDatabase.index()
# # AngularJS
GET             /examples/angular                         examples.controllers.ExampleAngular.index()
# # Limited Access
GET             /examples/access                          examples.controllers.ExampleStaticAccess.index()

# REDIRECT OLD
GET             /artikler/*path                           redir.Redir.artikler(path)
GET             /nyheter                                  redir.Redir.nyheter()

# Map static resources from the /public folder to the /assets URL path
GET             /assets/*file                             controllers.Assets.at(path="/public", file)
# Map static resources with restricted access from the /restricted folder to the /begrenset URL path
GET             /begrenset/:restriction/*file             controllers.Restricted.at(restriction, file)

#FIXME: Controllers burde kanskje returnere Application.showUnauthorizedAccess() heller enn å redirecte dit?
GET             /unauthorized                             application.Application.showUnauthorizedAccess()

# Show some page describing the URL if all else fails
GET             /error400/:error                          application.Application.show400(error)
GET             /$anything<.*>                            application.Application.show404(anything: String)
