# Routes
# This file defines all application routes (Higher priority routes first)

# Standard layout accessible pages
GET           /                                 application.Application.index()

# Static info pages
GET           /nystudent                        newstudent.NewStudent.index()
GET           /hybrida                          abouthybrida.AboutHybrida.index()
GET           /styret                           hybridaleaders.HybridaLeaders.index()

# Calendar
GET           /kalender                         calendar.Calendar.index()
GET           /kalender/fa                      calendar.Calendar.fetch(start: String, end: String)
POST          /kalender/endre                   calendar.Calendar.change()

# Update
GET           /update                           controllers.Update.index()
POST          /update                           controllers.Update.post()
GET           /update/utgaver                   controllers.Update.utgaver()
GET           /update/redaksjon                 controllers.Update.redaksjon()

# Article and events
GET           /griffensorden/riddere            riddere.Riddere.index()

GET           /artikkel/ut/:id                  article.Article.index(id)
GET           /artikkel/ny                      controllers.ArticleIn.index()
POST          /artikkel/ny                      controllers.ArticleIn.save()
GET           /artikkel/:id                     article.Article.viewArticle(id)
GET           /artikkel/:id/endre               article.Article.editArticle(id)
POST          /artikkel/:id/lagreEndring        controllers.ArticleIn.saveEdit(id)
GET           /event/ut/:id                     controllers.Event.viewEvent(id)
GET           /event/:id/endre                  controllers.Event.editEvent(id)
POST          /event/:id/lagreEndring           controllers.Event.saveEdit(id)

POST          /comment/:articleID               article.Article.comment(articleID)
POST          /comment/delete/:commentID        article.Article.deleteComment(commentID)

GET           /update                           controllers.Update.index()
POST          /update                           controllers.Update.post()
GET           /update/utgaver                   controllers.Update.utgaver()
GET           /update/redaksjon                 controllers.Update.redaksjon()

GET           /bedrift                          company.Company.index()

# Ebean example
GET           /ebean                            examples.controllers.ExampleEbean.index()
POST          /ebean                            examples.controllers.ExampleEbean.add()
POST          /ebean/clear                      examples.controllers.ExampleEbean.clear()

# Bruker current login cookie, og en eventId i POST
POST          /event/meldpaa                    controllers.Event.updateUser()
# Bruker current login cookie, og en eventId i POST
POST          /event/meldav                     controllers.Event.removeUser()

# Backup memory database
GET           /backup                           backup.BackupDatabase.index()


# Search
GET           /search                           controllers.Search.index()

# Login
GET           /login                            sso.SSOLogin.login(returnarg: String)
GET           /logout                           sso.SSOLogin.logout()
GET           /verifylogin                      sso.SSOLogin.verifylogin()
GET           /kontaktforbruker                 contactforuser.ContactForUser.index()

# Profile
GET           /profil/:username                 profile.Profile.index(username)
GET           /profil/:username/rediger         profile.Profile.edit(username)
POST          /profil/:username/rediger         profile.Profile.update(username)

# Quiz
GET           /quiz                             controllers.QuizController.index()
GET           /api/quiz/teams                   controllers.QuizController.quizTeams()
PUT           /api/quiz/team                    controllers.QuizController.putTeam()
DELETE        /api/quiz/team/:id                controllers.QuizController.deleteTeamById(id: Long)
GET           /api/quiz/seasons                 controllers.QuizController.quizSeasons()
PUT           /api/quiz/season                  controllers.QuizController.putSeason()
DELETE        /api/quiz/season/:id              controllers.QuizController.deleteSeasonById(id: Long)



# TEST
# # New design
GET           /proto                            application.Application.proto()
GET           /bs                               application.Application.bootstrapTest()
# # Chat
GET           /Chat                             controllers.Chat.connectClient()
GET           /ChatServer                       controllers.Chat.socket()
GET           /helloworld                            helloworld.HelloWorld.index()
GET           /andreas                          andreas.Andreas.index()
GET           /helloworld                       helloworld.HelloWorld.index()
GET           /elg                              elg.Elg.index()
GET           /hellome                          hellome.Hellome.index()

# EXAMPLES
# # Ebean
GET			  /jonasasa							jonasasa.Jonasasa.index()
GET           /examples/ebean                   examples.controllers.ExampleEbean.index()
POST          /examples/ebean                   examples.controllers.ExampleEbean.add()
POST          /examples/ebean/clear             examples.controllers.ExampleEbean.clear()
# # ImageUpload
GET           /examples/imageupload             examples.controllers.ExampleImageUpload.index()
POST          /examples/imageupload             examples.controllers.ExampleImageUpload.upload()
# # Cookies
GET           /examples/cookies                 examples.controllers.ExampleCookies.index()
POST          /examples/cookies/clear           examples.controllers.ExampleCookies.clearAllCookies()
GET           /examples/cookies/clear           examples.controllers.ExampleCookies.clearAllCookies()
# # Database
GET           /examples/database                examples.controllers.ExampleDatabase.index()
# # AngularJS
GET           /examples/angular                 examples.controllers.ExampleAngular.index()


# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                     controllers.Assets.at(path="/public", file)

GET           /unauthorized                     application.Application.showUnauthorizedAccess()

# Show some page describing the URL if all else fails
GET           /$anything<.*>                    application.Application.show404(anything: String)
GET           /error400/:error                  application.Application.show400(error)
